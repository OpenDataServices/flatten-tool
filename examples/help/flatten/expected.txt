usage: flatten-tool flatten [-h] [-s SCHEMA] [-f {csv,ods,xlsx,all}] [--xml]
                            [--id-name ID_NAME] [-m MAIN_SHEET_NAME]
                            [-o OUTPUT_NAME] [--root-list-path ROOT_LIST_PATH]
                            [--rollup [ROLLUP]] [-r ROOT_ID] [--use-titles]
                            [--truncation-length TRUNCATION_LENGTH]
                            [--root-is-list] [--sheet-prefix SHEET_PREFIX]
                            [--filter-field FILTER_FIELD]
                            [--filter-value FILTER_VALUE]
                            [--preserve-fields PRESERVE_FIELDS]
                            [--disable-local-refs]
                            [--remove-empty-schema-columns]
                            input_name

positional arguments:
  input_name            Name of the input JSON file.

optional arguments:
  -h, --help            show this help message and exit
  -s SCHEMA, --schema SCHEMA
                        Path to a relevant schema.
  -f {csv,ods,xlsx,all}, --output-format {csv,ods,xlsx,all}
                        Type of template you want to create. Defaults to all
                        available options
  --xml                 Use XML as the input format
  --id-name ID_NAME     String to use for the identifier key, defaults to 'id'
  -m MAIN_SHEET_NAME, --main-sheet-name MAIN_SHEET_NAME
                        The name of the main sheet, as seen in the first tab
                        of the spreadsheet for example. Defaults to main
  -o OUTPUT_NAME, --output-name OUTPUT_NAME
                        Name of the outputted file. Will have an extension
                        appended if format is all.
  --root-list-path ROOT_LIST_PATH
                        Path of the root list, defaults to main
  --rollup [ROLLUP]     "Roll up" columns from subsheets into the main sheet.
                        Pass one or more JSON paths directly, or a file with
                        one JSON path per line, or no value and use a schema
                        containing (a) rollUp attribute(s). Schema takes
                        precedence if both direct input and schema with
                        rollUps are present.
  -r ROOT_ID, --root-id ROOT_ID
                        Root ID of the data format, e.g. ocid for OCDS
  --use-titles          Convert titles. Requires a schema to be specified.
  --truncation-length TRUNCATION_LENGTH
                        The length of components of sub-sheet names (default
                        3).
  --root-is-list        The root element is a list. --root-list-path and meta
                        data will be ignored.
  --sheet-prefix SHEET_PREFIX
                        A string to prefix to the start of every sheet (or
                        file) name.
  --filter-field FILTER_FIELD
                        Data Filter - only data with this will be processed.
                        Use with --filter-value
  --filter-value FILTER_VALUE
                        Data Filter - only data with this will be processed.
                        Use with --filter-field
  --preserve-fields PRESERVE_FIELDS
                        Only these fields will be processed. Pass a file with
                        JSON paths to be preserved one per line.
  --disable-local-refs  Disable local refs when parsing JSON Schema.
  --remove-empty-schema-columns
                        When using flatten with a schema, remove columns and
                        sheets from the output that contain no data.
